{"ast":null,"code":"var common = require('./common');\nvar fs = require('fs');\nvar path = require('path');\ncommon.register('mkdir', _mkdir, {\n  cmdOptions: {\n    'p': 'fullpath'\n  }\n});\n\n// Recursively creates `dir`\nfunction mkdirSyncRecursive(dir) {\n  var baseDir = path.dirname(dir);\n\n  // Prevents some potential problems arising from malformed UNCs or\n  // insufficient permissions.\n  /* istanbul ignore next */\n  if (baseDir === dir) {\n    common.error('dirname() failed: [' + dir + ']');\n  }\n\n  // Base dir exists, no recursion necessary\n  if (fs.existsSync(baseDir)) {\n    fs.mkdirSync(dir, parseInt('0777', 8));\n    return;\n  }\n\n  // Base dir does not exist, go recursive\n  mkdirSyncRecursive(baseDir);\n\n  // Base dir created, can create dir\n  fs.mkdirSync(dir, parseInt('0777', 8));\n}\n\n//@\n//@ ### mkdir([options,] dir [, dir ...])\n//@ ### mkdir([options,] dir_array)\n//@\n//@ Available options:\n//@\n//@ + `-p`: full path (and create intermediate directories, if necessary)\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ mkdir('-p', '/tmp/a/b/c/d', '/tmp/e/f/g');\n//@ mkdir('-p', ['/tmp/a/b/c/d', '/tmp/e/f/g']); // same as above\n//@ ```\n//@\n//@ Creates directories.\nfunction _mkdir(options, dirs) {\n  if (!dirs) common.error('no paths given');\n  if (typeof dirs === 'string') {\n    dirs = [].slice.call(arguments, 1);\n  }\n  // if it's array leave it as it is\n\n  dirs.forEach(function (dir) {\n    try {\n      var stat = common.statNoFollowLinks(dir);\n      if (!options.fullpath) {\n        common.error('path already exists: ' + dir, {\n          continue: true\n        });\n      } else if (stat.isFile()) {\n        common.error('cannot create directory ' + dir + ': File exists', {\n          continue: true\n        });\n      }\n      return; // skip dir\n    } catch (e) {\n      // do nothing\n    }\n\n    // Base dir does not exist, and no -p option given\n    var baseDir = path.dirname(dir);\n    if (!fs.existsSync(baseDir) && !options.fullpath) {\n      common.error('no such file or directory: ' + baseDir, {\n        continue: true\n      });\n      return; // skip dir\n    }\n\n    try {\n      if (options.fullpath) {\n        mkdirSyncRecursive(path.resolve(dir));\n      } else {\n        fs.mkdirSync(dir, parseInt('0777', 8));\n      }\n    } catch (e) {\n      var reason;\n      if (e.code === 'EACCES') {\n        reason = 'Permission denied';\n      } else if (e.code === 'ENOTDIR' || e.code === 'ENOENT') {\n        reason = 'Not a directory';\n      } else {\n        /* istanbul ignore next */\n        throw e;\n      }\n      common.error('cannot create directory ' + dir + ': ' + reason, {\n        continue: true\n      });\n    }\n  });\n  return '';\n} // mkdir\nmodule.exports = _mkdir;","map":{"version":3,"names":["common","require","fs","path","register","_mkdir","cmdOptions","mkdirSyncRecursive","dir","baseDir","dirname","error","existsSync","mkdirSync","parseInt","options","dirs","slice","call","arguments","forEach","stat","statNoFollowLinks","fullpath","continue","isFile","e","resolve","reason","code","module","exports"],"sources":["/home/lenovo/node_modules/shelljs/src/mkdir.js"],"sourcesContent":["var common = require('./common');\nvar fs = require('fs');\nvar path = require('path');\n\ncommon.register('mkdir', _mkdir, {\n  cmdOptions: {\n    'p': 'fullpath',\n  },\n});\n\n// Recursively creates `dir`\nfunction mkdirSyncRecursive(dir) {\n  var baseDir = path.dirname(dir);\n\n  // Prevents some potential problems arising from malformed UNCs or\n  // insufficient permissions.\n  /* istanbul ignore next */\n  if (baseDir === dir) {\n    common.error('dirname() failed: [' + dir + ']');\n  }\n\n  // Base dir exists, no recursion necessary\n  if (fs.existsSync(baseDir)) {\n    fs.mkdirSync(dir, parseInt('0777', 8));\n    return;\n  }\n\n  // Base dir does not exist, go recursive\n  mkdirSyncRecursive(baseDir);\n\n  // Base dir created, can create dir\n  fs.mkdirSync(dir, parseInt('0777', 8));\n}\n\n//@\n//@ ### mkdir([options,] dir [, dir ...])\n//@ ### mkdir([options,] dir_array)\n//@\n//@ Available options:\n//@\n//@ + `-p`: full path (and create intermediate directories, if necessary)\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ mkdir('-p', '/tmp/a/b/c/d', '/tmp/e/f/g');\n//@ mkdir('-p', ['/tmp/a/b/c/d', '/tmp/e/f/g']); // same as above\n//@ ```\n//@\n//@ Creates directories.\nfunction _mkdir(options, dirs) {\n  if (!dirs) common.error('no paths given');\n\n  if (typeof dirs === 'string') {\n    dirs = [].slice.call(arguments, 1);\n  }\n  // if it's array leave it as it is\n\n  dirs.forEach(function (dir) {\n    try {\n      var stat = common.statNoFollowLinks(dir);\n      if (!options.fullpath) {\n        common.error('path already exists: ' + dir, { continue: true });\n      } else if (stat.isFile()) {\n        common.error('cannot create directory ' + dir + ': File exists', { continue: true });\n      }\n      return; // skip dir\n    } catch (e) {\n      // do nothing\n    }\n\n    // Base dir does not exist, and no -p option given\n    var baseDir = path.dirname(dir);\n    if (!fs.existsSync(baseDir) && !options.fullpath) {\n      common.error('no such file or directory: ' + baseDir, { continue: true });\n      return; // skip dir\n    }\n\n    try {\n      if (options.fullpath) {\n        mkdirSyncRecursive(path.resolve(dir));\n      } else {\n        fs.mkdirSync(dir, parseInt('0777', 8));\n      }\n    } catch (e) {\n      var reason;\n      if (e.code === 'EACCES') {\n        reason = 'Permission denied';\n      } else if (e.code === 'ENOTDIR' || e.code === 'ENOENT') {\n        reason = 'Not a directory';\n      } else {\n        /* istanbul ignore next */\n        throw e;\n      }\n      common.error('cannot create directory ' + dir + ': ' + reason, { continue: true });\n    }\n  });\n  return '';\n} // mkdir\nmodule.exports = _mkdir;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}