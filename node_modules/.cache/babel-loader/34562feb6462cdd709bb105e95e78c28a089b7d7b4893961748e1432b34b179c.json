{"ast":null,"code":"var common = require('./common');\nvar fs = require('fs');\ncommon.register('tail', _tail, {\n  canReceivePipe: true,\n  cmdOptions: {\n    'n': 'numLines'\n  }\n});\n\n//@\n//@ ### tail([{'-n': \\<num\\>},] file [, file ...])\n//@ ### tail([{'-n': \\<num\\>},] file_array)\n//@\n//@ Available options:\n//@\n//@ + `-n <num>`: Show the last `<num>` lines of `file`s\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ var str = tail({'-n': 1}, 'file*.txt');\n//@ var str = tail('file1', 'file2');\n//@ var str = tail(['file1', 'file2']); // same as above\n//@ ```\n//@\n//@ Read the end of a `file`.\nfunction _tail(options, files) {\n  var tail = [];\n  var pipe = common.readFromPipe();\n  if (!files && !pipe) common.error('no paths given');\n  var idx = 1;\n  if (options.numLines === true) {\n    idx = 2;\n    options.numLines = Number(arguments[1]);\n  } else if (options.numLines === false) {\n    options.numLines = 10;\n  }\n  options.numLines = -1 * Math.abs(options.numLines);\n  files = [].slice.call(arguments, idx);\n  if (pipe) {\n    files.unshift('-');\n  }\n  var shouldAppendNewline = false;\n  files.forEach(function (file) {\n    if (file !== '-') {\n      if (!fs.existsSync(file)) {\n        common.error('no such file or directory: ' + file, {\n          continue: true\n        });\n        return;\n      } else if (common.statFollowLinks(file).isDirectory()) {\n        common.error(\"error reading '\" + file + \"': Is a directory\", {\n          continue: true\n        });\n        return;\n      }\n    }\n    var contents = file === '-' ? pipe : fs.readFileSync(file, 'utf8');\n    var lines = contents.split('\\n');\n    if (lines[lines.length - 1] === '') {\n      lines.pop();\n      shouldAppendNewline = true;\n    } else {\n      shouldAppendNewline = false;\n    }\n    tail = tail.concat(lines.slice(options.numLines));\n  });\n  if (shouldAppendNewline) {\n    tail.push(''); // to add a trailing newline once we join\n  }\n\n  return tail.join('\\n');\n}\nmodule.exports = _tail;","map":{"version":3,"names":["common","require","fs","register","_tail","canReceivePipe","cmdOptions","options","files","tail","pipe","readFromPipe","error","idx","numLines","Number","arguments","Math","abs","slice","call","unshift","shouldAppendNewline","forEach","file","existsSync","continue","statFollowLinks","isDirectory","contents","readFileSync","lines","split","length","pop","concat","push","join","module","exports"],"sources":["/home/lenovo/node_modules/shelljs/src/tail.js"],"sourcesContent":["var common = require('./common');\nvar fs = require('fs');\n\ncommon.register('tail', _tail, {\n  canReceivePipe: true,\n  cmdOptions: {\n    'n': 'numLines',\n  },\n});\n\n//@\n//@ ### tail([{'-n': \\<num\\>},] file [, file ...])\n//@ ### tail([{'-n': \\<num\\>},] file_array)\n//@\n//@ Available options:\n//@\n//@ + `-n <num>`: Show the last `<num>` lines of `file`s\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ var str = tail({'-n': 1}, 'file*.txt');\n//@ var str = tail('file1', 'file2');\n//@ var str = tail(['file1', 'file2']); // same as above\n//@ ```\n//@\n//@ Read the end of a `file`.\nfunction _tail(options, files) {\n  var tail = [];\n  var pipe = common.readFromPipe();\n\n  if (!files && !pipe) common.error('no paths given');\n\n  var idx = 1;\n  if (options.numLines === true) {\n    idx = 2;\n    options.numLines = Number(arguments[1]);\n  } else if (options.numLines === false) {\n    options.numLines = 10;\n  }\n  options.numLines = -1 * Math.abs(options.numLines);\n  files = [].slice.call(arguments, idx);\n\n  if (pipe) {\n    files.unshift('-');\n  }\n\n  var shouldAppendNewline = false;\n  files.forEach(function (file) {\n    if (file !== '-') {\n      if (!fs.existsSync(file)) {\n        common.error('no such file or directory: ' + file, { continue: true });\n        return;\n      } else if (common.statFollowLinks(file).isDirectory()) {\n        common.error(\"error reading '\" + file + \"': Is a directory\", {\n          continue: true,\n        });\n        return;\n      }\n    }\n\n    var contents = file === '-' ? pipe : fs.readFileSync(file, 'utf8');\n\n    var lines = contents.split('\\n');\n    if (lines[lines.length - 1] === '') {\n      lines.pop();\n      shouldAppendNewline = true;\n    } else {\n      shouldAppendNewline = false;\n    }\n\n    tail = tail.concat(lines.slice(options.numLines));\n  });\n\n  if (shouldAppendNewline) {\n    tail.push(''); // to add a trailing newline once we join\n  }\n  return tail.join('\\n');\n}\nmodule.exports = _tail;\n"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAU,CAAC;AAChC,IAAIC,EAAE,GAAGD,OAAO,CAAC,IAAI,CAAC;AAEtBD,MAAM,CAACG,QAAQ,CAAC,MAAM,EAAEC,KAAK,EAAE;EAC7BC,cAAc,EAAE,IAAI;EACpBC,UAAU,EAAE;IACV,GAAG,EAAE;EACP;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,KAAKA,CAACG,OAAO,EAAEC,KAAK,EAAE;EAC7B,IAAIC,IAAI,GAAG,EAAE;EACb,IAAIC,IAAI,GAAGV,MAAM,CAACW,YAAY,CAAC,CAAC;EAEhC,IAAI,CAACH,KAAK,IAAI,CAACE,IAAI,EAAEV,MAAM,CAACY,KAAK,CAAC,gBAAgB,CAAC;EAEnD,IAAIC,GAAG,GAAG,CAAC;EACX,IAAIN,OAAO,CAACO,QAAQ,KAAK,IAAI,EAAE;IAC7BD,GAAG,GAAG,CAAC;IACPN,OAAO,CAACO,QAAQ,GAAGC,MAAM,CAACC,SAAS,CAAC,CAAC,CAAC,CAAC;EACzC,CAAC,MAAM,IAAIT,OAAO,CAACO,QAAQ,KAAK,KAAK,EAAE;IACrCP,OAAO,CAACO,QAAQ,GAAG,EAAE;EACvB;EACAP,OAAO,CAACO,QAAQ,GAAG,CAAC,CAAC,GAAGG,IAAI,CAACC,GAAG,CAACX,OAAO,CAACO,QAAQ,CAAC;EAClDN,KAAK,GAAG,EAAE,CAACW,KAAK,CAACC,IAAI,CAACJ,SAAS,EAAEH,GAAG,CAAC;EAErC,IAAIH,IAAI,EAAE;IACRF,KAAK,CAACa,OAAO,CAAC,GAAG,CAAC;EACpB;EAEA,IAAIC,mBAAmB,GAAG,KAAK;EAC/Bd,KAAK,CAACe,OAAO,CAAC,UAAUC,IAAI,EAAE;IAC5B,IAAIA,IAAI,KAAK,GAAG,EAAE;MAChB,IAAI,CAACtB,EAAE,CAACuB,UAAU,CAACD,IAAI,CAAC,EAAE;QACxBxB,MAAM,CAACY,KAAK,CAAC,6BAA6B,GAAGY,IAAI,EAAE;UAAEE,QAAQ,EAAE;QAAK,CAAC,CAAC;QACtE;MACF,CAAC,MAAM,IAAI1B,MAAM,CAAC2B,eAAe,CAACH,IAAI,CAAC,CAACI,WAAW,CAAC,CAAC,EAAE;QACrD5B,MAAM,CAACY,KAAK,CAAC,iBAAiB,GAAGY,IAAI,GAAG,mBAAmB,EAAE;UAC3DE,QAAQ,EAAE;QACZ,CAAC,CAAC;QACF;MACF;IACF;IAEA,IAAIG,QAAQ,GAAGL,IAAI,KAAK,GAAG,GAAGd,IAAI,GAAGR,EAAE,CAAC4B,YAAY,CAACN,IAAI,EAAE,MAAM,CAAC;IAElE,IAAIO,KAAK,GAAGF,QAAQ,CAACG,KAAK,CAAC,IAAI,CAAC;IAChC,IAAID,KAAK,CAACA,KAAK,CAACE,MAAM,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE;MAClCF,KAAK,CAACG,GAAG,CAAC,CAAC;MACXZ,mBAAmB,GAAG,IAAI;IAC5B,CAAC,MAAM;MACLA,mBAAmB,GAAG,KAAK;IAC7B;IAEAb,IAAI,GAAGA,IAAI,CAAC0B,MAAM,CAACJ,KAAK,CAACZ,KAAK,CAACZ,OAAO,CAACO,QAAQ,CAAC,CAAC;EACnD,CAAC,CAAC;EAEF,IAAIQ,mBAAmB,EAAE;IACvBb,IAAI,CAAC2B,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;EACjB;;EACA,OAAO3B,IAAI,CAAC4B,IAAI,CAAC,IAAI,CAAC;AACxB;AACAC,MAAM,CAACC,OAAO,GAAGnC,KAAK"},"metadata":{},"sourceType":"script","externalDependencies":[]}