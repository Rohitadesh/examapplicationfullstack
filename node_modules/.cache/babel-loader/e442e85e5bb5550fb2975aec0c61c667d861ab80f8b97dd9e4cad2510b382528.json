{"ast":null,"code":"'use strict';\n\nconst debug = require('debug')('wait-port');\nconst detect = require('./detect-port');\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\nasync function waitPort(port) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    retryInterval = 1000,\n    retries = Infinity\n  } = options;\n  let count = 1;\n  async function loop() {\n    debug('retries', retries, 'count', count);\n    if (count > retries) {\n      const err = new Error('retries exceeded');\n      err.retries = retries;\n      err.count = count;\n      throw err;\n    }\n    count++;\n    const freePort = await detect(port);\n    if (freePort === port) {\n      await sleep(retryInterval);\n      return loop();\n    }\n    return true;\n  }\n  return await loop();\n}\nmodule.exports = waitPort;","map":{"version":3,"names":["debug","require","detect","sleep","ms","Promise","resolve","setTimeout","waitPort","port","options","arguments","length","undefined","retryInterval","retries","Infinity","count","loop","err","Error","freePort","module","exports"],"sources":["/home/lenovo/node_modules/detect-port/lib/wait-port.js"],"sourcesContent":["'use strict';\n\nconst debug = require('debug')('wait-port');\nconst detect = require('./detect-port');\n\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nasync function waitPort(port, options = {}) {\n  const { retryInterval = 1000, retries = Infinity } = options;\n  let count = 1;\n\n  async function loop() {\n    debug('retries', retries, 'count', count);\n    if (count > retries) {\n      const err = new Error('retries exceeded');\n      err.retries = retries;\n      err.count = count;\n      throw err;\n    }\n    count++;\n    const freePort = await detect(port);\n    if (freePort === port) {\n      await sleep(retryInterval);\n      return loop();\n    }\n    return true;\n  }\n\n  return await loop();\n}\n\nmodule.exports = waitPort;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC;AAC3C,MAAMC,MAAM,GAAGD,OAAO,CAAC,eAAe,CAAC;AAEvC,MAAME,KAAK,GAAGC,EAAE,IAAI,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAEF,EAAE,CAAC,CAAC;AAEnE,eAAeI,QAAQA,CAACC,IAAI,EAAgB;EAAA,IAAdC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EACxC,MAAM;IAAEG,aAAa,GAAG,IAAI;IAAEC,OAAO,GAAGC;EAAS,CAAC,GAAGN,OAAO;EAC5D,IAAIO,KAAK,GAAG,CAAC;EAEb,eAAeC,IAAIA,CAAA,EAAG;IACpBlB,KAAK,CAAC,SAAS,EAAEe,OAAO,EAAE,OAAO,EAAEE,KAAK,CAAC;IACzC,IAAIA,KAAK,GAAGF,OAAO,EAAE;MACnB,MAAMI,GAAG,GAAG,IAAIC,KAAK,CAAC,kBAAkB,CAAC;MACzCD,GAAG,CAACJ,OAAO,GAAGA,OAAO;MACrBI,GAAG,CAACF,KAAK,GAAGA,KAAK;MACjB,MAAME,GAAG;IACX;IACAF,KAAK,EAAE;IACP,MAAMI,QAAQ,GAAG,MAAMnB,MAAM,CAACO,IAAI,CAAC;IACnC,IAAIY,QAAQ,KAAKZ,IAAI,EAAE;MACrB,MAAMN,KAAK,CAACW,aAAa,CAAC;MAC1B,OAAOI,IAAI,CAAC,CAAC;IACf;IACA,OAAO,IAAI;EACb;EAEA,OAAO,MAAMA,IAAI,CAAC,CAAC;AACrB;AAEAI,MAAM,CAACC,OAAO,GAAGf,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}