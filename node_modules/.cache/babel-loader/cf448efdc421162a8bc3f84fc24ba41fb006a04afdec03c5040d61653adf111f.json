{"ast":null,"code":"var common = require('./common');\nvar fs = require('fs');\ncommon.register('rm', _rm, {\n  cmdOptions: {\n    'f': 'force',\n    'r': 'recursive',\n    'R': 'recursive'\n  }\n});\n\n// Recursively removes 'dir'\n// Adapted from https://github.com/ryanmcgrath/wrench-js\n//\n// Copyright (c) 2010 Ryan McGrath\n// Copyright (c) 2012 Artur Adib\n//\n// Licensed under the MIT License\n// http://www.opensource.org/licenses/mit-license.php\nfunction rmdirSyncRecursive(dir, force, fromSymlink) {\n  var files;\n  files = fs.readdirSync(dir);\n\n  // Loop through and delete everything in the sub-tree after checking it\n  for (var i = 0; i < files.length; i++) {\n    var file = dir + '/' + files[i];\n    var currFile = common.statNoFollowLinks(file);\n    if (currFile.isDirectory()) {\n      // Recursive function back to the beginning\n      rmdirSyncRecursive(file, force);\n    } else {\n      // Assume it's a file - perhaps a try/catch belongs here?\n      if (force || isWriteable(file)) {\n        try {\n          common.unlinkSync(file);\n        } catch (e) {\n          /* istanbul ignore next */\n          common.error('could not remove file (code ' + e.code + '): ' + file, {\n            continue: true\n          });\n        }\n      }\n    }\n  }\n\n  // if was directory was referenced through a symbolic link,\n  // the contents should be removed, but not the directory itself\n  if (fromSymlink) return;\n\n  // Now that we know everything in the sub-tree has been deleted, we can delete the main directory.\n  // Huzzah for the shopkeep.\n\n  var result;\n  try {\n    // Retry on windows, sometimes it takes a little time before all the files in the directory are gone\n    var start = Date.now();\n\n    // TODO: replace this with a finite loop\n    for (;;) {\n      try {\n        result = fs.rmdirSync(dir);\n        if (fs.existsSync(dir)) throw {\n          code: 'EAGAIN'\n        };\n        break;\n      } catch (er) {\n        /* istanbul ignore next */\n        // In addition to error codes, also check if the directory still exists and loop again if true\n        if (process.platform === 'win32' && (er.code === 'ENOTEMPTY' || er.code === 'EBUSY' || er.code === 'EPERM' || er.code === 'EAGAIN')) {\n          if (Date.now() - start > 1000) throw er;\n        } else if (er.code === 'ENOENT') {\n          // Directory did not exist, deletion was successful\n          break;\n        } else {\n          throw er;\n        }\n      }\n    }\n  } catch (e) {\n    common.error('could not remove directory (code ' + e.code + '): ' + dir, {\n      continue: true\n    });\n  }\n  return result;\n} // rmdirSyncRecursive\n\n// Hack to determine if file has write permissions for current user\n// Avoids having to check user, group, etc, but it's probably slow\nfunction isWriteable(file) {\n  var writePermission = true;\n  try {\n    var __fd = fs.openSync(file, 'a');\n    fs.closeSync(__fd);\n  } catch (e) {\n    writePermission = false;\n  }\n  return writePermission;\n}\nfunction handleFile(file, options) {\n  if (options.force || isWriteable(file)) {\n    // -f was passed, or file is writable, so it can be removed\n    common.unlinkSync(file);\n  } else {\n    common.error('permission denied: ' + file, {\n      continue: true\n    });\n  }\n}\nfunction handleDirectory(file, options) {\n  if (options.recursive) {\n    // -r was passed, so directory can be removed\n    rmdirSyncRecursive(file, options.force);\n  } else {\n    common.error('path is a directory', {\n      continue: true\n    });\n  }\n}\nfunction handleSymbolicLink(file, options) {\n  var stats;\n  try {\n    stats = common.statFollowLinks(file);\n  } catch (e) {\n    // symlink is broken, so remove the symlink itself\n    common.unlinkSync(file);\n    return;\n  }\n  if (stats.isFile()) {\n    common.unlinkSync(file);\n  } else if (stats.isDirectory()) {\n    if (file[file.length - 1] === '/') {\n      // trailing separator, so remove the contents, not the link\n      if (options.recursive) {\n        // -r was passed, so directory can be removed\n        var fromSymlink = true;\n        rmdirSyncRecursive(file, options.force, fromSymlink);\n      } else {\n        common.error('path is a directory', {\n          continue: true\n        });\n      }\n    } else {\n      // no trailing separator, so remove the link\n      common.unlinkSync(file);\n    }\n  }\n}\nfunction handleFIFO(file) {\n  common.unlinkSync(file);\n}\n\n//@\n//@ ### rm([options,] file [, file ...])\n//@ ### rm([options,] file_array)\n//@\n//@ Available options:\n//@\n//@ + `-f`: force\n//@ + `-r, -R`: recursive\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ rm('-rf', '/tmp/*');\n//@ rm('some_file.txt', 'another_file.txt');\n//@ rm(['some_file.txt', 'another_file.txt']); // same as above\n//@ ```\n//@\n//@ Removes files.\nfunction _rm(options, files) {\n  if (!files) common.error('no paths given');\n\n  // Convert to array\n  files = [].slice.call(arguments, 1);\n  files.forEach(function (file) {\n    var lstats;\n    try {\n      var filepath = file[file.length - 1] === '/' ? file.slice(0, -1) // remove the '/' so lstatSync can detect symlinks\n      : file;\n      lstats = common.statNoFollowLinks(filepath); // test for existence\n    } catch (e) {\n      // Path does not exist, no force flag given\n      if (!options.force) {\n        common.error('no such file or directory: ' + file, {\n          continue: true\n        });\n      }\n      return; // skip file\n    }\n\n    // If here, path exists\n    if (lstats.isFile()) {\n      handleFile(file, options);\n    } else if (lstats.isDirectory()) {\n      handleDirectory(file, options);\n    } else if (lstats.isSymbolicLink()) {\n      handleSymbolicLink(file, options);\n    } else if (lstats.isFIFO()) {\n      handleFIFO(file);\n    }\n  }); // forEach(file)\n  return '';\n} // rm\nmodule.exports = _rm;","map":{"version":3,"names":["common","require","fs","register","_rm","cmdOptions","rmdirSyncRecursive","dir","force","fromSymlink","files","readdirSync","i","length","file","currFile","statNoFollowLinks","isDirectory","isWriteable","unlinkSync","e","error","code","continue","result","start","Date","now","rmdirSync","existsSync","er","process","platform","writePermission","__fd","openSync","closeSync","handleFile","options","handleDirectory","recursive","handleSymbolicLink","stats","statFollowLinks","isFile","handleFIFO","slice","call","arguments","forEach","lstats","filepath","isSymbolicLink","isFIFO","module","exports"],"sources":["/home/lenovo/node_modules/shelljs/src/rm.js"],"sourcesContent":["var common = require('./common');\nvar fs = require('fs');\n\ncommon.register('rm', _rm, {\n  cmdOptions: {\n    'f': 'force',\n    'r': 'recursive',\n    'R': 'recursive',\n  },\n});\n\n// Recursively removes 'dir'\n// Adapted from https://github.com/ryanmcgrath/wrench-js\n//\n// Copyright (c) 2010 Ryan McGrath\n// Copyright (c) 2012 Artur Adib\n//\n// Licensed under the MIT License\n// http://www.opensource.org/licenses/mit-license.php\nfunction rmdirSyncRecursive(dir, force, fromSymlink) {\n  var files;\n\n  files = fs.readdirSync(dir);\n\n  // Loop through and delete everything in the sub-tree after checking it\n  for (var i = 0; i < files.length; i++) {\n    var file = dir + '/' + files[i];\n    var currFile = common.statNoFollowLinks(file);\n\n    if (currFile.isDirectory()) { // Recursive function back to the beginning\n      rmdirSyncRecursive(file, force);\n    } else { // Assume it's a file - perhaps a try/catch belongs here?\n      if (force || isWriteable(file)) {\n        try {\n          common.unlinkSync(file);\n        } catch (e) {\n          /* istanbul ignore next */\n          common.error('could not remove file (code ' + e.code + '): ' + file, {\n            continue: true,\n          });\n        }\n      }\n    }\n  }\n\n  // if was directory was referenced through a symbolic link,\n  // the contents should be removed, but not the directory itself\n  if (fromSymlink) return;\n\n  // Now that we know everything in the sub-tree has been deleted, we can delete the main directory.\n  // Huzzah for the shopkeep.\n\n  var result;\n  try {\n    // Retry on windows, sometimes it takes a little time before all the files in the directory are gone\n    var start = Date.now();\n\n    // TODO: replace this with a finite loop\n    for (;;) {\n      try {\n        result = fs.rmdirSync(dir);\n        if (fs.existsSync(dir)) throw { code: 'EAGAIN' };\n        break;\n      } catch (er) {\n        /* istanbul ignore next */\n        // In addition to error codes, also check if the directory still exists and loop again if true\n        if (process.platform === 'win32' && (er.code === 'ENOTEMPTY' || er.code === 'EBUSY' || er.code === 'EPERM' || er.code === 'EAGAIN')) {\n          if (Date.now() - start > 1000) throw er;\n        } else if (er.code === 'ENOENT') {\n          // Directory did not exist, deletion was successful\n          break;\n        } else {\n          throw er;\n        }\n      }\n    }\n  } catch (e) {\n    common.error('could not remove directory (code ' + e.code + '): ' + dir, { continue: true });\n  }\n\n  return result;\n} // rmdirSyncRecursive\n\n// Hack to determine if file has write permissions for current user\n// Avoids having to check user, group, etc, but it's probably slow\nfunction isWriteable(file) {\n  var writePermission = true;\n  try {\n    var __fd = fs.openSync(file, 'a');\n    fs.closeSync(__fd);\n  } catch (e) {\n    writePermission = false;\n  }\n\n  return writePermission;\n}\n\nfunction handleFile(file, options) {\n  if (options.force || isWriteable(file)) {\n    // -f was passed, or file is writable, so it can be removed\n    common.unlinkSync(file);\n  } else {\n    common.error('permission denied: ' + file, { continue: true });\n  }\n}\n\nfunction handleDirectory(file, options) {\n  if (options.recursive) {\n    // -r was passed, so directory can be removed\n    rmdirSyncRecursive(file, options.force);\n  } else {\n    common.error('path is a directory', { continue: true });\n  }\n}\n\nfunction handleSymbolicLink(file, options) {\n  var stats;\n  try {\n    stats = common.statFollowLinks(file);\n  } catch (e) {\n    // symlink is broken, so remove the symlink itself\n    common.unlinkSync(file);\n    return;\n  }\n\n  if (stats.isFile()) {\n    common.unlinkSync(file);\n  } else if (stats.isDirectory()) {\n    if (file[file.length - 1] === '/') {\n      // trailing separator, so remove the contents, not the link\n      if (options.recursive) {\n        // -r was passed, so directory can be removed\n        var fromSymlink = true;\n        rmdirSyncRecursive(file, options.force, fromSymlink);\n      } else {\n        common.error('path is a directory', { continue: true });\n      }\n    } else {\n      // no trailing separator, so remove the link\n      common.unlinkSync(file);\n    }\n  }\n}\n\nfunction handleFIFO(file) {\n  common.unlinkSync(file);\n}\n\n//@\n//@ ### rm([options,] file [, file ...])\n//@ ### rm([options,] file_array)\n//@\n//@ Available options:\n//@\n//@ + `-f`: force\n//@ + `-r, -R`: recursive\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ rm('-rf', '/tmp/*');\n//@ rm('some_file.txt', 'another_file.txt');\n//@ rm(['some_file.txt', 'another_file.txt']); // same as above\n//@ ```\n//@\n//@ Removes files.\nfunction _rm(options, files) {\n  if (!files) common.error('no paths given');\n\n  // Convert to array\n  files = [].slice.call(arguments, 1);\n\n  files.forEach(function (file) {\n    var lstats;\n    try {\n      var filepath = (file[file.length - 1] === '/')\n        ? file.slice(0, -1) // remove the '/' so lstatSync can detect symlinks\n        : file;\n      lstats = common.statNoFollowLinks(filepath); // test for existence\n    } catch (e) {\n      // Path does not exist, no force flag given\n      if (!options.force) {\n        common.error('no such file or directory: ' + file, { continue: true });\n      }\n      return; // skip file\n    }\n\n    // If here, path exists\n    if (lstats.isFile()) {\n      handleFile(file, options);\n    } else if (lstats.isDirectory()) {\n      handleDirectory(file, options);\n    } else if (lstats.isSymbolicLink()) {\n      handleSymbolicLink(file, options);\n    } else if (lstats.isFIFO()) {\n      handleFIFO(file);\n    }\n  }); // forEach(file)\n  return '';\n} // rm\nmodule.exports = _rm;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}