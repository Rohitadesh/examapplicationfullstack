{"ast":null,"code":"var common = require('./common');\nvar fs = require('fs');\ncommon.register('test', _test, {\n  cmdOptions: {\n    'b': 'block',\n    'c': 'character',\n    'd': 'directory',\n    'e': 'exists',\n    'f': 'file',\n    'L': 'link',\n    'p': 'pipe',\n    'S': 'socket'\n  },\n  wrapOutput: false,\n  allowGlobbing: false\n});\n\n//@\n//@ ### test(expression)\n//@\n//@ Available expression primaries:\n//@\n//@ + `'-b', 'path'`: true if path is a block device\n//@ + `'-c', 'path'`: true if path is a character device\n//@ + `'-d', 'path'`: true if path is a directory\n//@ + `'-e', 'path'`: true if path exists\n//@ + `'-f', 'path'`: true if path is a regular file\n//@ + `'-L', 'path'`: true if path is a symbolic link\n//@ + `'-p', 'path'`: true if path is a pipe (FIFO)\n//@ + `'-S', 'path'`: true if path is a socket\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ if (test('-d', path)) { /* do something with dir */ };\n//@ if (!test('-f', path)) continue; // skip if it's a regular file\n//@ ```\n//@\n//@ Evaluates `expression` using the available primaries and returns corresponding value.\nfunction _test(options, path) {\n  if (!path) common.error('no path given');\n  var canInterpret = false;\n  Object.keys(options).forEach(function (key) {\n    if (options[key] === true) {\n      canInterpret = true;\n    }\n  });\n  if (!canInterpret) common.error('could not interpret expression');\n  if (options.link) {\n    try {\n      return common.statNoFollowLinks(path).isSymbolicLink();\n    } catch (e) {\n      return false;\n    }\n  }\n  if (!fs.existsSync(path)) return false;\n  if (options.exists) return true;\n  var stats = common.statFollowLinks(path);\n  if (options.block) return stats.isBlockDevice();\n  if (options.character) return stats.isCharacterDevice();\n  if (options.directory) return stats.isDirectory();\n  if (options.file) return stats.isFile();\n\n  /* istanbul ignore next */\n  if (options.pipe) return stats.isFIFO();\n\n  /* istanbul ignore next */\n  if (options.socket) return stats.isSocket();\n\n  /* istanbul ignore next */\n  return false; // fallback\n} // test\nmodule.exports = _test;","map":{"version":3,"names":["common","require","fs","register","_test","cmdOptions","wrapOutput","allowGlobbing","options","path","error","canInterpret","Object","keys","forEach","key","link","statNoFollowLinks","isSymbolicLink","e","existsSync","exists","stats","statFollowLinks","block","isBlockDevice","character","isCharacterDevice","directory","isDirectory","file","isFile","pipe","isFIFO","socket","isSocket","module","exports"],"sources":["/home/lenovo/node_modules/shelljs/src/test.js"],"sourcesContent":["var common = require('./common');\nvar fs = require('fs');\n\ncommon.register('test', _test, {\n  cmdOptions: {\n    'b': 'block',\n    'c': 'character',\n    'd': 'directory',\n    'e': 'exists',\n    'f': 'file',\n    'L': 'link',\n    'p': 'pipe',\n    'S': 'socket',\n  },\n  wrapOutput: false,\n  allowGlobbing: false,\n});\n\n\n//@\n//@ ### test(expression)\n//@\n//@ Available expression primaries:\n//@\n//@ + `'-b', 'path'`: true if path is a block device\n//@ + `'-c', 'path'`: true if path is a character device\n//@ + `'-d', 'path'`: true if path is a directory\n//@ + `'-e', 'path'`: true if path exists\n//@ + `'-f', 'path'`: true if path is a regular file\n//@ + `'-L', 'path'`: true if path is a symbolic link\n//@ + `'-p', 'path'`: true if path is a pipe (FIFO)\n//@ + `'-S', 'path'`: true if path is a socket\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ if (test('-d', path)) { /* do something with dir */ };\n//@ if (!test('-f', path)) continue; // skip if it's a regular file\n//@ ```\n//@\n//@ Evaluates `expression` using the available primaries and returns corresponding value.\nfunction _test(options, path) {\n  if (!path) common.error('no path given');\n\n  var canInterpret = false;\n  Object.keys(options).forEach(function (key) {\n    if (options[key] === true) {\n      canInterpret = true;\n    }\n  });\n\n  if (!canInterpret) common.error('could not interpret expression');\n\n  if (options.link) {\n    try {\n      return common.statNoFollowLinks(path).isSymbolicLink();\n    } catch (e) {\n      return false;\n    }\n  }\n\n  if (!fs.existsSync(path)) return false;\n\n  if (options.exists) return true;\n\n  var stats = common.statFollowLinks(path);\n\n  if (options.block) return stats.isBlockDevice();\n\n  if (options.character) return stats.isCharacterDevice();\n\n  if (options.directory) return stats.isDirectory();\n\n  if (options.file) return stats.isFile();\n\n  /* istanbul ignore next */\n  if (options.pipe) return stats.isFIFO();\n\n  /* istanbul ignore next */\n  if (options.socket) return stats.isSocket();\n\n  /* istanbul ignore next */\n  return false; // fallback\n} // test\nmodule.exports = _test;\n"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAU,CAAC;AAChC,IAAIC,EAAE,GAAGD,OAAO,CAAC,IAAI,CAAC;AAEtBD,MAAM,CAACG,QAAQ,CAAC,MAAM,EAAEC,KAAK,EAAE;EAC7BC,UAAU,EAAE;IACV,GAAG,EAAE,OAAO;IACZ,GAAG,EAAE,WAAW;IAChB,GAAG,EAAE,WAAW;IAChB,GAAG,EAAE,QAAQ;IACb,GAAG,EAAE,MAAM;IACX,GAAG,EAAE,MAAM;IACX,GAAG,EAAE,MAAM;IACX,GAAG,EAAE;EACP,CAAC;EACDC,UAAU,EAAE,KAAK;EACjBC,aAAa,EAAE;AACjB,CAAC,CAAC;;AAGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASH,KAAKA,CAACI,OAAO,EAAEC,IAAI,EAAE;EAC5B,IAAI,CAACA,IAAI,EAAET,MAAM,CAACU,KAAK,CAAC,eAAe,CAAC;EAExC,IAAIC,YAAY,GAAG,KAAK;EACxBC,MAAM,CAACC,IAAI,CAACL,OAAO,CAAC,CAACM,OAAO,CAAC,UAAUC,GAAG,EAAE;IAC1C,IAAIP,OAAO,CAACO,GAAG,CAAC,KAAK,IAAI,EAAE;MACzBJ,YAAY,GAAG,IAAI;IACrB;EACF,CAAC,CAAC;EAEF,IAAI,CAACA,YAAY,EAAEX,MAAM,CAACU,KAAK,CAAC,gCAAgC,CAAC;EAEjE,IAAIF,OAAO,CAACQ,IAAI,EAAE;IAChB,IAAI;MACF,OAAOhB,MAAM,CAACiB,iBAAiB,CAACR,IAAI,CAAC,CAACS,cAAc,CAAC,CAAC;IACxD,CAAC,CAAC,OAAOC,CAAC,EAAE;MACV,OAAO,KAAK;IACd;EACF;EAEA,IAAI,CAACjB,EAAE,CAACkB,UAAU,CAACX,IAAI,CAAC,EAAE,OAAO,KAAK;EAEtC,IAAID,OAAO,CAACa,MAAM,EAAE,OAAO,IAAI;EAE/B,IAAIC,KAAK,GAAGtB,MAAM,CAACuB,eAAe,CAACd,IAAI,CAAC;EAExC,IAAID,OAAO,CAACgB,KAAK,EAAE,OAAOF,KAAK,CAACG,aAAa,CAAC,CAAC;EAE/C,IAAIjB,OAAO,CAACkB,SAAS,EAAE,OAAOJ,KAAK,CAACK,iBAAiB,CAAC,CAAC;EAEvD,IAAInB,OAAO,CAACoB,SAAS,EAAE,OAAON,KAAK,CAACO,WAAW,CAAC,CAAC;EAEjD,IAAIrB,OAAO,CAACsB,IAAI,EAAE,OAAOR,KAAK,CAACS,MAAM,CAAC,CAAC;;EAEvC;EACA,IAAIvB,OAAO,CAACwB,IAAI,EAAE,OAAOV,KAAK,CAACW,MAAM,CAAC,CAAC;;EAEvC;EACA,IAAIzB,OAAO,CAAC0B,MAAM,EAAE,OAAOZ,KAAK,CAACa,QAAQ,CAAC,CAAC;;EAE3C;EACA,OAAO,KAAK,CAAC,CAAC;AAChB,CAAC,CAAC;AACFC,MAAM,CAACC,OAAO,GAAGjC,KAAK"},"metadata":{},"sourceType":"script","externalDependencies":[]}