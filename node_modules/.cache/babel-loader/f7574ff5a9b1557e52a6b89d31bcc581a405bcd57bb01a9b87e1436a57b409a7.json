{"ast":null,"code":"'use strict';\n\nconst fs = require('fs');\nconst os = require('os');\nconst opn = require('opn');\nconst ipv4 = require('ipv4');\nconst chalk = require('chalk');\nconst rimraf = require('rimraf');\nconst moment = require('moment');\nconst mkdirp = require('mkdirp');\nconst lodash = require('lodash');\nconst semver = require('semver');\nconst uuidV4 = require('uuid/v4');\nconst shelljs = require('shelljs');\nconst detectPort = require('detect-port');\nvar _ = lodash.merge({}, lodash);\n_.camelcase = str => {\n  return str.split('-').reduce((str, word) => {\n    return str + word[0].toUpperCase() + word.slice(1);\n  });\n};\n_.getConfig = program => {\n  let cfg = {};\n  program.options.forEach(item => {\n    const key = _.camelcase(item.name());\n    if (key in program) {\n      if (typeof program[key] !== 'function') {\n        cfg[key] = program[key];\n      }\n    }\n  });\n  return cfg;\n};\n_.platform = function () {\n  var platform = os.platform();\n  return {\n    isWindows: platform.indexOf('win') === 0 || platform === 'cygwin',\n    isLinux: platform === 'linux' || platform === 'freebsd',\n    isOSX: platform === 'darwin'\n  };\n}();\n_.isExistedFile = function (p) {\n  p = p.replace(/(\\?|#).*$/, '');\n  return fs.existsSync(p) && fs.statSync(p).isFile();\n};\n_.isExistedDir = function (p) {\n  return fs.existsSync(p) && fs.statSync(p).isDirectory();\n};\n_.noCacheRequire = function (resolvedPath) {\n  delete require.cache[resolvedPath];\n  return require(resolvedPath);\n};\n_.ipv4 = ipv4;\n_.semver = semver;\n_.shelljs = shelljs;\n_.opn = opn;\n_.chalk = chalk;\n_.mkdir = mkdirp.sync;\n_.rimraf = rimraf.sync;\n_.moment = moment;\n_.uuid = uuidV4;\n_.detectPort = detectPort;\nmodule.exports = _;","map":{"version":3,"names":["fs","require","os","opn","ipv4","chalk","rimraf","moment","mkdirp","lodash","semver","uuidV4","shelljs","detectPort","_","merge","camelcase","str","split","reduce","word","toUpperCase","slice","getConfig","program","cfg","options","forEach","item","key","name","platform","isWindows","indexOf","isLinux","isOSX","isExistedFile","p","replace","existsSync","statSync","isFile","isExistedDir","isDirectory","noCacheRequire","resolvedPath","cache","mkdir","sync","uuid","module","exports"],"sources":["/home/lenovo/node_modules/xutil/lib/xutil.js"],"sourcesContent":["'use strict';\n\nconst fs = require('fs');\nconst os = require('os');\nconst opn = require('opn');\nconst ipv4 = require('ipv4');\nconst chalk = require('chalk');\nconst rimraf = require('rimraf');\nconst moment = require('moment');\nconst mkdirp = require('mkdirp');\nconst lodash = require('lodash');\nconst semver = require('semver');\nconst uuidV4 = require('uuid/v4');\nconst shelljs = require('shelljs');\nconst detectPort = require('detect-port');\n\nvar _ = lodash.merge({}, lodash);\n\n_.camelcase = (str) => {\n  return str.split('-').reduce((str, word) => {\n    return str + word[0].toUpperCase() + word.slice(1);\n  });\n};\n\n_.getConfig = (program) => {\n  let cfg = {};\n\n  program.options.forEach((item) => {\n    const key = _.camelcase(item.name());\n\n    if (key in program) {\n\n      if (typeof program[key] !== 'function') {\n        cfg[key] = program[key];\n      }\n    }\n  });\n  return cfg;\n};\n\n_.platform = (function() {\n  var platform = os.platform();\n\n  return {\n    isWindows: platform.indexOf('win') === 0 || platform === 'cygwin',\n    isLinux: platform === 'linux' || platform === 'freebsd',\n    isOSX: platform === 'darwin'\n  };\n})();\n\n_.isExistedFile = function(p) {\n  p = p.replace(/(\\?|#).*$/, '');\n  return fs.existsSync(p) && fs.statSync(p).isFile();\n};\n\n_.isExistedDir = function(p) {\n  return fs.existsSync(p) && fs.statSync(p).isDirectory();\n};\n\n_.noCacheRequire = function(resolvedPath) {\n  delete require.cache[resolvedPath];\n  return require(resolvedPath);\n};\n\n_.ipv4 = ipv4;\n_.semver = semver;\n_.shelljs = shelljs;\n_.opn = opn;\n_.chalk = chalk;\n_.mkdir = mkdirp.sync;\n_.rimraf = rimraf.sync;\n_.moment = moment;\n_.uuid = uuidV4;\n_.detectPort = detectPort;\n\nmodule.exports = _;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}