{"ast":null,"code":"var os = require('os');\nvar common = require('./common');\ncommon.register('cd', _cd, {});\n\n//@\n//@ ### cd([dir])\n//@\n//@ Changes to directory `dir` for the duration of the script. Changes to home\n//@ directory if no argument is supplied.\nfunction _cd(options, dir) {\n  if (!dir) dir = os.homedir();\n  if (dir === '-') {\n    if (!process.env.OLDPWD) {\n      common.error('could not find previous directory');\n    } else {\n      dir = process.env.OLDPWD;\n    }\n  }\n  try {\n    var curDir = process.cwd();\n    process.chdir(dir);\n    process.env.OLDPWD = curDir;\n  } catch (e) {\n    // something went wrong, let's figure out the error\n    var err;\n    try {\n      common.statFollowLinks(dir); // if this succeeds, it must be some sort of file\n      err = 'not a directory: ' + dir;\n    } catch (e2) {\n      err = 'no such file or directory: ' + dir;\n    }\n    if (err) common.error(err);\n  }\n  return '';\n}\nmodule.exports = _cd;","map":{"version":3,"names":["os","require","common","register","_cd","options","dir","homedir","process","env","OLDPWD","error","curDir","cwd","chdir","e","err","statFollowLinks","e2","module","exports"],"sources":["/home/lenovo/node_modules/shelljs/src/cd.js"],"sourcesContent":["var os = require('os');\nvar common = require('./common');\n\ncommon.register('cd', _cd, {});\n\n//@\n//@ ### cd([dir])\n//@\n//@ Changes to directory `dir` for the duration of the script. Changes to home\n//@ directory if no argument is supplied.\nfunction _cd(options, dir) {\n  if (!dir) dir = os.homedir();\n\n  if (dir === '-') {\n    if (!process.env.OLDPWD) {\n      common.error('could not find previous directory');\n    } else {\n      dir = process.env.OLDPWD;\n    }\n  }\n\n  try {\n    var curDir = process.cwd();\n    process.chdir(dir);\n    process.env.OLDPWD = curDir;\n  } catch (e) {\n    // something went wrong, let's figure out the error\n    var err;\n    try {\n      common.statFollowLinks(dir); // if this succeeds, it must be some sort of file\n      err = 'not a directory: ' + dir;\n    } catch (e2) {\n      err = 'no such file or directory: ' + dir;\n    }\n    if (err) common.error(err);\n  }\n  return '';\n}\nmodule.exports = _cd;\n"],"mappings":"AAAA,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;AACtB,IAAIC,MAAM,GAAGD,OAAO,CAAC,UAAU,CAAC;AAEhCC,MAAM,CAACC,QAAQ,CAAC,IAAI,EAAEC,GAAG,EAAE,CAAC,CAAC,CAAC;;AAE9B;AACA;AACA;AACA;AACA;AACA,SAASA,GAAGA,CAACC,OAAO,EAAEC,GAAG,EAAE;EACzB,IAAI,CAACA,GAAG,EAAEA,GAAG,GAAGN,EAAE,CAACO,OAAO,CAAC,CAAC;EAE5B,IAAID,GAAG,KAAK,GAAG,EAAE;IACf,IAAI,CAACE,OAAO,CAACC,GAAG,CAACC,MAAM,EAAE;MACvBR,MAAM,CAACS,KAAK,CAAC,mCAAmC,CAAC;IACnD,CAAC,MAAM;MACLL,GAAG,GAAGE,OAAO,CAACC,GAAG,CAACC,MAAM;IAC1B;EACF;EAEA,IAAI;IACF,IAAIE,MAAM,GAAGJ,OAAO,CAACK,GAAG,CAAC,CAAC;IAC1BL,OAAO,CAACM,KAAK,CAACR,GAAG,CAAC;IAClBE,OAAO,CAACC,GAAG,CAACC,MAAM,GAAGE,MAAM;EAC7B,CAAC,CAAC,OAAOG,CAAC,EAAE;IACV;IACA,IAAIC,GAAG;IACP,IAAI;MACFd,MAAM,CAACe,eAAe,CAACX,GAAG,CAAC,CAAC,CAAC;MAC7BU,GAAG,GAAG,mBAAmB,GAAGV,GAAG;IACjC,CAAC,CAAC,OAAOY,EAAE,EAAE;MACXF,GAAG,GAAG,6BAA6B,GAAGV,GAAG;IAC3C;IACA,IAAIU,GAAG,EAAEd,MAAM,CAACS,KAAK,CAACK,GAAG,CAAC;EAC5B;EACA,OAAO,EAAE;AACX;AACAG,MAAM,CAACC,OAAO,GAAGhB,GAAG"},"metadata":{},"sourceType":"script","externalDependencies":[]}