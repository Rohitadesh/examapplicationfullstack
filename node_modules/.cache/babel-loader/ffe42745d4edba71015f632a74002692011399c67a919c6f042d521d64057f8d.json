{"ast":null,"code":"var common = require('./common');\nvar fs = require('fs');\ncommon.register('sort', _sort, {\n  canReceivePipe: true,\n  cmdOptions: {\n    'r': 'reverse',\n    'n': 'numerical'\n  }\n});\n\n// parse out the number prefix of a line\nfunction parseNumber(str) {\n  var match = str.match(/^\\s*(\\d*)\\s*(.*)$/);\n  return {\n    num: Number(match[1]),\n    value: match[2]\n  };\n}\n\n// compare two strings case-insensitively, but examine case for strings that are\n// case-insensitive equivalent\nfunction unixCmp(a, b) {\n  var aLower = a.toLowerCase();\n  var bLower = b.toLowerCase();\n  return aLower === bLower ? -1 * a.localeCompare(b) :\n  // unix sort treats case opposite how javascript does\n  aLower.localeCompare(bLower);\n}\n\n// compare two strings in the fashion that unix sort's -n option works\nfunction numericalCmp(a, b) {\n  var objA = parseNumber(a);\n  var objB = parseNumber(b);\n  if (objA.hasOwnProperty('num') && objB.hasOwnProperty('num')) {\n    return objA.num !== objB.num ? objA.num - objB.num : unixCmp(objA.value, objB.value);\n  } else {\n    return unixCmp(objA.value, objB.value);\n  }\n}\n\n//@\n//@ ### sort([options,] file [, file ...])\n//@ ### sort([options,] file_array)\n//@\n//@ Available options:\n//@\n//@ + `-r`: Reverse the results\n//@ + `-n`: Compare according to numerical value\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ sort('foo.txt', 'bar.txt');\n//@ sort('-r', 'foo.txt');\n//@ ```\n//@\n//@ Return the contents of the `file`s, sorted line-by-line. Sorting multiple\n//@ files mixes their content (just as unix `sort` does).\nfunction _sort(options, files) {\n  // Check if this is coming from a pipe\n  var pipe = common.readFromPipe();\n  if (!files && !pipe) common.error('no files given');\n  files = [].slice.call(arguments, 1);\n  if (pipe) {\n    files.unshift('-');\n  }\n  var lines = files.reduce(function (accum, file) {\n    if (file !== '-') {\n      if (!fs.existsSync(file)) {\n        common.error('no such file or directory: ' + file, {\n          continue: true\n        });\n        return accum;\n      } else if (common.statFollowLinks(file).isDirectory()) {\n        common.error('read failed: ' + file + ': Is a directory', {\n          continue: true\n        });\n        return accum;\n      }\n    }\n    var contents = file === '-' ? pipe : fs.readFileSync(file, 'utf8');\n    return accum.concat(contents.trimRight().split('\\n'));\n  }, []);\n  var sorted = lines.sort(options.numerical ? numericalCmp : unixCmp);\n  if (options.reverse) {\n    sorted = sorted.reverse();\n  }\n  return sorted.join('\\n') + '\\n';\n}\nmodule.exports = _sort;","map":{"version":3,"names":["common","require","fs","register","_sort","canReceivePipe","cmdOptions","parseNumber","str","match","num","Number","value","unixCmp","a","b","aLower","toLowerCase","bLower","localeCompare","numericalCmp","objA","objB","hasOwnProperty","options","files","pipe","readFromPipe","error","slice","call","arguments","unshift","lines","reduce","accum","file","existsSync","continue","statFollowLinks","isDirectory","contents","readFileSync","concat","trimRight","split","sorted","sort","numerical","reverse","join","module","exports"],"sources":["/home/lenovo/node_modules/shelljs/src/sort.js"],"sourcesContent":["var common = require('./common');\nvar fs = require('fs');\n\ncommon.register('sort', _sort, {\n  canReceivePipe: true,\n  cmdOptions: {\n    'r': 'reverse',\n    'n': 'numerical',\n  },\n});\n\n// parse out the number prefix of a line\nfunction parseNumber(str) {\n  var match = str.match(/^\\s*(\\d*)\\s*(.*)$/);\n  return { num: Number(match[1]), value: match[2] };\n}\n\n// compare two strings case-insensitively, but examine case for strings that are\n// case-insensitive equivalent\nfunction unixCmp(a, b) {\n  var aLower = a.toLowerCase();\n  var bLower = b.toLowerCase();\n  return (aLower === bLower ?\n      -1 * a.localeCompare(b) : // unix sort treats case opposite how javascript does\n      aLower.localeCompare(bLower));\n}\n\n// compare two strings in the fashion that unix sort's -n option works\nfunction numericalCmp(a, b) {\n  var objA = parseNumber(a);\n  var objB = parseNumber(b);\n  if (objA.hasOwnProperty('num') && objB.hasOwnProperty('num')) {\n    return ((objA.num !== objB.num) ?\n        (objA.num - objB.num) :\n        unixCmp(objA.value, objB.value));\n  } else {\n    return unixCmp(objA.value, objB.value);\n  }\n}\n\n//@\n//@ ### sort([options,] file [, file ...])\n//@ ### sort([options,] file_array)\n//@\n//@ Available options:\n//@\n//@ + `-r`: Reverse the results\n//@ + `-n`: Compare according to numerical value\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ sort('foo.txt', 'bar.txt');\n//@ sort('-r', 'foo.txt');\n//@ ```\n//@\n//@ Return the contents of the `file`s, sorted line-by-line. Sorting multiple\n//@ files mixes their content (just as unix `sort` does).\nfunction _sort(options, files) {\n  // Check if this is coming from a pipe\n  var pipe = common.readFromPipe();\n\n  if (!files && !pipe) common.error('no files given');\n\n  files = [].slice.call(arguments, 1);\n\n  if (pipe) {\n    files.unshift('-');\n  }\n\n  var lines = files.reduce(function (accum, file) {\n    if (file !== '-') {\n      if (!fs.existsSync(file)) {\n        common.error('no such file or directory: ' + file, { continue: true });\n        return accum;\n      } else if (common.statFollowLinks(file).isDirectory()) {\n        common.error('read failed: ' + file + ': Is a directory', {\n          continue: true,\n        });\n        return accum;\n      }\n    }\n\n    var contents = file === '-' ? pipe : fs.readFileSync(file, 'utf8');\n    return accum.concat(contents.trimRight().split('\\n'));\n  }, []);\n\n  var sorted = lines.sort(options.numerical ? numericalCmp : unixCmp);\n\n  if (options.reverse) {\n    sorted = sorted.reverse();\n  }\n\n  return sorted.join('\\n') + '\\n';\n}\n\nmodule.exports = _sort;\n"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAU,CAAC;AAChC,IAAIC,EAAE,GAAGD,OAAO,CAAC,IAAI,CAAC;AAEtBD,MAAM,CAACG,QAAQ,CAAC,MAAM,EAAEC,KAAK,EAAE;EAC7BC,cAAc,EAAE,IAAI;EACpBC,UAAU,EAAE;IACV,GAAG,EAAE,SAAS;IACd,GAAG,EAAE;EACP;AACF,CAAC,CAAC;;AAEF;AACA,SAASC,WAAWA,CAACC,GAAG,EAAE;EACxB,IAAIC,KAAK,GAAGD,GAAG,CAACC,KAAK,CAAC,mBAAmB,CAAC;EAC1C,OAAO;IAAEC,GAAG,EAAEC,MAAM,CAACF,KAAK,CAAC,CAAC,CAAC,CAAC;IAAEG,KAAK,EAAEH,KAAK,CAAC,CAAC;EAAE,CAAC;AACnD;;AAEA;AACA;AACA,SAASI,OAAOA,CAACC,CAAC,EAAEC,CAAC,EAAE;EACrB,IAAIC,MAAM,GAAGF,CAAC,CAACG,WAAW,CAAC,CAAC;EAC5B,IAAIC,MAAM,GAAGH,CAAC,CAACE,WAAW,CAAC,CAAC;EAC5B,OAAQD,MAAM,KAAKE,MAAM,GACrB,CAAC,CAAC,GAAGJ,CAAC,CAACK,aAAa,CAACJ,CAAC,CAAC;EAAG;EAC1BC,MAAM,CAACG,aAAa,CAACD,MAAM,CAAC;AAClC;;AAEA;AACA,SAASE,YAAYA,CAACN,CAAC,EAAEC,CAAC,EAAE;EAC1B,IAAIM,IAAI,GAAGd,WAAW,CAACO,CAAC,CAAC;EACzB,IAAIQ,IAAI,GAAGf,WAAW,CAACQ,CAAC,CAAC;EACzB,IAAIM,IAAI,CAACE,cAAc,CAAC,KAAK,CAAC,IAAID,IAAI,CAACC,cAAc,CAAC,KAAK,CAAC,EAAE;IAC5D,OAASF,IAAI,CAACX,GAAG,KAAKY,IAAI,CAACZ,GAAG,GACzBW,IAAI,CAACX,GAAG,GAAGY,IAAI,CAACZ,GAAG,GACpBG,OAAO,CAACQ,IAAI,CAACT,KAAK,EAAEU,IAAI,CAACV,KAAK,CAAC;EACrC,CAAC,MAAM;IACL,OAAOC,OAAO,CAACQ,IAAI,CAACT,KAAK,EAAEU,IAAI,CAACV,KAAK,CAAC;EACxC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASR,KAAKA,CAACoB,OAAO,EAAEC,KAAK,EAAE;EAC7B;EACA,IAAIC,IAAI,GAAG1B,MAAM,CAAC2B,YAAY,CAAC,CAAC;EAEhC,IAAI,CAACF,KAAK,IAAI,CAACC,IAAI,EAAE1B,MAAM,CAAC4B,KAAK,CAAC,gBAAgB,CAAC;EAEnDH,KAAK,GAAG,EAAE,CAACI,KAAK,CAACC,IAAI,CAACC,SAAS,EAAE,CAAC,CAAC;EAEnC,IAAIL,IAAI,EAAE;IACRD,KAAK,CAACO,OAAO,CAAC,GAAG,CAAC;EACpB;EAEA,IAAIC,KAAK,GAAGR,KAAK,CAACS,MAAM,CAAC,UAAUC,KAAK,EAAEC,IAAI,EAAE;IAC9C,IAAIA,IAAI,KAAK,GAAG,EAAE;MAChB,IAAI,CAAClC,EAAE,CAACmC,UAAU,CAACD,IAAI,CAAC,EAAE;QACxBpC,MAAM,CAAC4B,KAAK,CAAC,6BAA6B,GAAGQ,IAAI,EAAE;UAAEE,QAAQ,EAAE;QAAK,CAAC,CAAC;QACtE,OAAOH,KAAK;MACd,CAAC,MAAM,IAAInC,MAAM,CAACuC,eAAe,CAACH,IAAI,CAAC,CAACI,WAAW,CAAC,CAAC,EAAE;QACrDxC,MAAM,CAAC4B,KAAK,CAAC,eAAe,GAAGQ,IAAI,GAAG,kBAAkB,EAAE;UACxDE,QAAQ,EAAE;QACZ,CAAC,CAAC;QACF,OAAOH,KAAK;MACd;IACF;IAEA,IAAIM,QAAQ,GAAGL,IAAI,KAAK,GAAG,GAAGV,IAAI,GAAGxB,EAAE,CAACwC,YAAY,CAACN,IAAI,EAAE,MAAM,CAAC;IAClE,OAAOD,KAAK,CAACQ,MAAM,CAACF,QAAQ,CAACG,SAAS,CAAC,CAAC,CAACC,KAAK,CAAC,IAAI,CAAC,CAAC;EACvD,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIC,MAAM,GAAGb,KAAK,CAACc,IAAI,CAACvB,OAAO,CAACwB,SAAS,GAAG5B,YAAY,GAAGP,OAAO,CAAC;EAEnE,IAAIW,OAAO,CAACyB,OAAO,EAAE;IACnBH,MAAM,GAAGA,MAAM,CAACG,OAAO,CAAC,CAAC;EAC3B;EAEA,OAAOH,MAAM,CAACI,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI;AACjC;AAEAC,MAAM,CAACC,OAAO,GAAGhD,KAAK"},"metadata":{},"sourceType":"script","externalDependencies":[]}