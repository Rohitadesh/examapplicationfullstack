{"ast":null,"code":"var fs = require('fs');\nvar path = require('path');\nvar common = require('./common');\ncommon.register('ln', _ln, {\n  cmdOptions: {\n    's': 'symlink',\n    'f': 'force'\n  }\n});\n\n//@\n//@ ### ln([options,] source, dest)\n//@\n//@ Available options:\n//@\n//@ + `-s`: symlink\n//@ + `-f`: force\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ ln('file', 'newlink');\n//@ ln('-sf', 'file', 'existing');\n//@ ```\n//@\n//@ Links `source` to `dest`. Use `-f` to force the link, should `dest` already exist.\nfunction _ln(options, source, dest) {\n  if (!source || !dest) {\n    common.error('Missing <source> and/or <dest>');\n  }\n  source = String(source);\n  var sourcePath = path.normalize(source).replace(RegExp(path.sep + '$'), '');\n  var isAbsolute = path.resolve(source) === sourcePath;\n  dest = path.resolve(process.cwd(), String(dest));\n  if (fs.existsSync(dest)) {\n    if (!options.force) {\n      common.error('Destination file exists', {\n        continue: true\n      });\n    }\n    fs.unlinkSync(dest);\n  }\n  if (options.symlink) {\n    var isWindows = process.platform === 'win32';\n    var linkType = isWindows ? 'file' : null;\n    var resolvedSourcePath = isAbsolute ? sourcePath : path.resolve(process.cwd(), path.dirname(dest), source);\n    if (!fs.existsSync(resolvedSourcePath)) {\n      common.error('Source file does not exist', {\n        continue: true\n      });\n    } else if (isWindows && common.statFollowLinks(resolvedSourcePath).isDirectory()) {\n      linkType = 'junction';\n    }\n    try {\n      fs.symlinkSync(linkType === 'junction' ? resolvedSourcePath : source, dest, linkType);\n    } catch (err) {\n      common.error(err.message);\n    }\n  } else {\n    if (!fs.existsSync(source)) {\n      common.error('Source file does not exist', {\n        continue: true\n      });\n    }\n    try {\n      fs.linkSync(source, dest);\n    } catch (err) {\n      common.error(err.message);\n    }\n  }\n  return '';\n}\nmodule.exports = _ln;","map":{"version":3,"names":["fs","require","path","common","register","_ln","cmdOptions","options","source","dest","error","String","sourcePath","normalize","replace","RegExp","sep","isAbsolute","resolve","process","cwd","existsSync","force","continue","unlinkSync","symlink","isWindows","platform","linkType","resolvedSourcePath","dirname","statFollowLinks","isDirectory","symlinkSync","err","message","linkSync","module","exports"],"sources":["/home/lenovo/node_modules/shelljs/src/ln.js"],"sourcesContent":["var fs = require('fs');\nvar path = require('path');\nvar common = require('./common');\n\ncommon.register('ln', _ln, {\n  cmdOptions: {\n    's': 'symlink',\n    'f': 'force',\n  },\n});\n\n//@\n//@ ### ln([options,] source, dest)\n//@\n//@ Available options:\n//@\n//@ + `-s`: symlink\n//@ + `-f`: force\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ ln('file', 'newlink');\n//@ ln('-sf', 'file', 'existing');\n//@ ```\n//@\n//@ Links `source` to `dest`. Use `-f` to force the link, should `dest` already exist.\nfunction _ln(options, source, dest) {\n  if (!source || !dest) {\n    common.error('Missing <source> and/or <dest>');\n  }\n\n  source = String(source);\n  var sourcePath = path.normalize(source).replace(RegExp(path.sep + '$'), '');\n  var isAbsolute = (path.resolve(source) === sourcePath);\n  dest = path.resolve(process.cwd(), String(dest));\n\n  if (fs.existsSync(dest)) {\n    if (!options.force) {\n      common.error('Destination file exists', { continue: true });\n    }\n\n    fs.unlinkSync(dest);\n  }\n\n  if (options.symlink) {\n    var isWindows = process.platform === 'win32';\n    var linkType = isWindows ? 'file' : null;\n    var resolvedSourcePath = isAbsolute ? sourcePath : path.resolve(process.cwd(), path.dirname(dest), source);\n    if (!fs.existsSync(resolvedSourcePath)) {\n      common.error('Source file does not exist', { continue: true });\n    } else if (isWindows && common.statFollowLinks(resolvedSourcePath).isDirectory()) {\n      linkType = 'junction';\n    }\n\n    try {\n      fs.symlinkSync(linkType === 'junction' ? resolvedSourcePath : source, dest, linkType);\n    } catch (err) {\n      common.error(err.message);\n    }\n  } else {\n    if (!fs.existsSync(source)) {\n      common.error('Source file does not exist', { continue: true });\n    }\n    try {\n      fs.linkSync(source, dest);\n    } catch (err) {\n      common.error(err.message);\n    }\n  }\n  return '';\n}\nmodule.exports = _ln;\n"],"mappings":"AAAA,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;AACtB,IAAIC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC1B,IAAIE,MAAM,GAAGF,OAAO,CAAC,UAAU,CAAC;AAEhCE,MAAM,CAACC,QAAQ,CAAC,IAAI,EAAEC,GAAG,EAAE;EACzBC,UAAU,EAAE;IACV,GAAG,EAAE,SAAS;IACd,GAAG,EAAE;EACP;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,GAAGA,CAACE,OAAO,EAAEC,MAAM,EAAEC,IAAI,EAAE;EAClC,IAAI,CAACD,MAAM,IAAI,CAACC,IAAI,EAAE;IACpBN,MAAM,CAACO,KAAK,CAAC,gCAAgC,CAAC;EAChD;EAEAF,MAAM,GAAGG,MAAM,CAACH,MAAM,CAAC;EACvB,IAAII,UAAU,GAAGV,IAAI,CAACW,SAAS,CAACL,MAAM,CAAC,CAACM,OAAO,CAACC,MAAM,CAACb,IAAI,CAACc,GAAG,GAAG,GAAG,CAAC,EAAE,EAAE,CAAC;EAC3E,IAAIC,UAAU,GAAIf,IAAI,CAACgB,OAAO,CAACV,MAAM,CAAC,KAAKI,UAAW;EACtDH,IAAI,GAAGP,IAAI,CAACgB,OAAO,CAACC,OAAO,CAACC,GAAG,CAAC,CAAC,EAAET,MAAM,CAACF,IAAI,CAAC,CAAC;EAEhD,IAAIT,EAAE,CAACqB,UAAU,CAACZ,IAAI,CAAC,EAAE;IACvB,IAAI,CAACF,OAAO,CAACe,KAAK,EAAE;MAClBnB,MAAM,CAACO,KAAK,CAAC,yBAAyB,EAAE;QAAEa,QAAQ,EAAE;MAAK,CAAC,CAAC;IAC7D;IAEAvB,EAAE,CAACwB,UAAU,CAACf,IAAI,CAAC;EACrB;EAEA,IAAIF,OAAO,CAACkB,OAAO,EAAE;IACnB,IAAIC,SAAS,GAAGP,OAAO,CAACQ,QAAQ,KAAK,OAAO;IAC5C,IAAIC,QAAQ,GAAGF,SAAS,GAAG,MAAM,GAAG,IAAI;IACxC,IAAIG,kBAAkB,GAAGZ,UAAU,GAAGL,UAAU,GAAGV,IAAI,CAACgB,OAAO,CAACC,OAAO,CAACC,GAAG,CAAC,CAAC,EAAElB,IAAI,CAAC4B,OAAO,CAACrB,IAAI,CAAC,EAAED,MAAM,CAAC;IAC1G,IAAI,CAACR,EAAE,CAACqB,UAAU,CAACQ,kBAAkB,CAAC,EAAE;MACtC1B,MAAM,CAACO,KAAK,CAAC,4BAA4B,EAAE;QAAEa,QAAQ,EAAE;MAAK,CAAC,CAAC;IAChE,CAAC,MAAM,IAAIG,SAAS,IAAIvB,MAAM,CAAC4B,eAAe,CAACF,kBAAkB,CAAC,CAACG,WAAW,CAAC,CAAC,EAAE;MAChFJ,QAAQ,GAAG,UAAU;IACvB;IAEA,IAAI;MACF5B,EAAE,CAACiC,WAAW,CAACL,QAAQ,KAAK,UAAU,GAAGC,kBAAkB,GAAGrB,MAAM,EAAEC,IAAI,EAAEmB,QAAQ,CAAC;IACvF,CAAC,CAAC,OAAOM,GAAG,EAAE;MACZ/B,MAAM,CAACO,KAAK,CAACwB,GAAG,CAACC,OAAO,CAAC;IAC3B;EACF,CAAC,MAAM;IACL,IAAI,CAACnC,EAAE,CAACqB,UAAU,CAACb,MAAM,CAAC,EAAE;MAC1BL,MAAM,CAACO,KAAK,CAAC,4BAA4B,EAAE;QAAEa,QAAQ,EAAE;MAAK,CAAC,CAAC;IAChE;IACA,IAAI;MACFvB,EAAE,CAACoC,QAAQ,CAAC5B,MAAM,EAAEC,IAAI,CAAC;IAC3B,CAAC,CAAC,OAAOyB,GAAG,EAAE;MACZ/B,MAAM,CAACO,KAAK,CAACwB,GAAG,CAACC,OAAO,CAAC;IAC3B;EACF;EACA,OAAO,EAAE;AACX;AACAE,MAAM,CAACC,OAAO,GAAGjC,GAAG"},"metadata":{},"sourceType":"script","externalDependencies":[]}