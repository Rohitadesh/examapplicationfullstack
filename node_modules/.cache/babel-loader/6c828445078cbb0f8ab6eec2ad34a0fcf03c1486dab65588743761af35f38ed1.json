{"ast":null,"code":"'use strict';\n\nconst dns = require('dns');\nconst request = require('request');\nconst _ = require('./helper');\nconst UA = require('./common').UA;\nconst chalk = _.chalk;\n\n/*\nhttps://api.ip2country.info/ip?127.0.0.1\nhttps://dazzlepod.com/ip/127.0.0.1.json\nhttps://www.ipify.org/\nhttp://freeapi.ipip.net/127.0.0.1\n*/\n\n/*\ndns.lookup('www.github.com', (err, address) => {\n  //console.log(address);\n});\n\ndns.resolve('www.github.com', (err, address) => {\n  address.forEach(item => {\n    console.log(item);\n  });\n});\n*/\n\n//class A : 1-126   : 8 netmask\n//class B : 128-191 : 16 netmask\n//class C : 192-223 : 24 netmask\n//class D : 224-239 : 32 netmask\n\nexports.ipClass = ip => {\n  var pre = parseInt(ip.split('.')[0], 10);\n  if (pre >= 1 && pre <= 126) {\n    return 'A';\n  } else if (pre >= 128 && pre <= 191) {\n    return 'B';\n  } else if (pre >= 192 && pre <= 223) {\n    return 'C';\n  } else if (pre >= 224 && pre <= 239) {\n    return 'D';\n  }\n};\nvar retryRequest = (options, successCallback) => {\n  request(options, (error, response, body) => {\n    if (error) {\n      return console.log(error);\n    }\n    if (response.statusCode === 200) {\n      successCallback(body);\n    } else {\n      retryRequest(options, successCallback);\n    }\n  });\n};\nvar colorFulPrinter = (hop, body) => {\n  var ip = hop.host + new Array(16 - hop.host.length).join(' ');\n  var time = new Array(10 - hop.delta.length).join(' ') + hop.delta.slice(0, 7);\n  var locale = JSON.parse(body).join('');\n  var delta = parseInt(hop.delta, 10);\n  var color = 'yellow';\n  if (delta <= 20) {\n    color = 'green';\n  } else if (delta >= 200) {\n    color = 'red';\n  }\n  console.log(chalk[color](` [${exports.ipClass(ip)}] ${ip} ${time} ms ${locale}`));\n};\nexports.getInfoByHop = (hop, queue) => {\n  retryRequest({\n    url: `http://freeapi.ipip.net/${hop.host}`,\n    headers: {\n      'User-Agent': UA\n    }\n  }, body => {\n    colorFulPrinter(hop, body);\n    queue.next();\n  });\n};\nexports.checkLocalhost = () => {\n  return new Promise((resolve, reject) => {\n    const result = {};\n    dns.lookup('localhost', 6, (err, res) => {\n      result['ipv6_reachable'] = res === '::1';\n      dns.lookup('localhost', 4, (err, res) => {\n        result['ipv4_reachable'] = res === '127.0.0.1';\n        resolve(result);\n      });\n    });\n  });\n};","map":{"version":3,"names":["dns","require","request","_","UA","chalk","exports","ipClass","ip","pre","parseInt","split","retryRequest","options","successCallback","error","response","body","console","log","statusCode","colorFulPrinter","hop","host","Array","length","join","time","delta","slice","locale","JSON","parse","color","getInfoByHop","queue","url","headers","next","checkLocalhost","Promise","resolve","reject","result","lookup","err","res"],"sources":["/home/lenovo/node_modules/net-tools/lib/ip.js"],"sourcesContent":["'use strict';\n\nconst dns = require('dns');\nconst request = require('request');\n\nconst _ = require('./helper');\nconst UA = require('./common').UA;\n\nconst chalk = _.chalk;\n\n/*\nhttps://api.ip2country.info/ip?127.0.0.1\nhttps://dazzlepod.com/ip/127.0.0.1.json\nhttps://www.ipify.org/\nhttp://freeapi.ipip.net/127.0.0.1\n*/\n\n/*\ndns.lookup('www.github.com', (err, address) => {\n  //console.log(address);\n});\n\ndns.resolve('www.github.com', (err, address) => {\n  address.forEach(item => {\n    console.log(item);\n  });\n});\n*/\n\n//class A : 1-126   : 8 netmask\n//class B : 128-191 : 16 netmask\n//class C : 192-223 : 24 netmask\n//class D : 224-239 : 32 netmask\n\nexports.ipClass = ip => {\n  var pre = parseInt(ip.split('.')[0], 10);\n  if (pre >= 1 && pre <= 126) {\n    return 'A';\n  } else if (pre >= 128 && pre <= 191) {\n    return 'B';\n  } else if (pre >= 192 && pre <= 223) {\n    return 'C';\n  } else if (pre >= 224 && pre <= 239) {\n    return 'D';\n  }\n};\n\nvar retryRequest = (options, successCallback) => {\n  request(options, (error, response, body) => {\n    if (error) {\n      return console.log(error);\n    }\n    if (response.statusCode === 200) {\n      successCallback(body);\n    } else {\n      retryRequest(options, successCallback);\n    }\n  });\n};\n\nvar colorFulPrinter = (hop, body) => {\n  var ip = hop.host + new Array(16 - hop.host.length).join(' ');\n  var time = new Array(10 - hop.delta.length).join(' ') + hop.delta.slice(0, 7);\n  var locale = JSON.parse(body).join('');\n  var delta = parseInt(hop.delta, 10);\n  var color = 'yellow';\n\n  if (delta <= 20) {\n    color = 'green';\n  } else if (delta >= 200) {\n    color = 'red';\n  }\n  console.log(chalk[color](` [${exports.ipClass(ip)}] ${ip} ${time} ms ${locale}`));\n};\n\nexports.getInfoByHop = (hop, queue) => {\n  retryRequest({\n    url: `http://freeapi.ipip.net/${hop.host}`,\n    headers: {\n      'User-Agent': UA\n    }\n  }, body => {\n    colorFulPrinter(hop, body);\n    queue.next();\n  });\n};\n\nexports.checkLocalhost = () => {\n  return new Promise((resolve, reject) => {\n    const result = {};\n    dns.lookup('localhost', 6, (err, res) => {\n      result['ipv6_reachable'] = res === '::1';\n      dns.lookup('localhost', 4, (err, res) => {\n        result['ipv4_reachable'] = res === '127.0.0.1';\n        resolve(result);\n      });\n    });\n  });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}