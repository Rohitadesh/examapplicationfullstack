{"ast":null,"code":"var common = require('./common');\nvar fs = require('fs');\n\n// add c spaces to the left of str\nfunction lpad(c, str) {\n  var res = '' + str;\n  if (res.length < c) {\n    res = Array(c - res.length + 1).join(' ') + res;\n  }\n  return res;\n}\ncommon.register('uniq', _uniq, {\n  canReceivePipe: true,\n  cmdOptions: {\n    'i': 'ignoreCase',\n    'c': 'count',\n    'd': 'duplicates'\n  }\n});\n\n//@\n//@ ### uniq([options,] [input, [output]])\n//@\n//@ Available options:\n//@\n//@ + `-i`: Ignore case while comparing\n//@ + `-c`: Prefix lines by the number of occurrences\n//@ + `-d`: Only print duplicate lines, one for each group of identical lines\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ uniq('foo.txt');\n//@ uniq('-i', 'foo.txt');\n//@ uniq('-cd', 'foo.txt', 'bar.txt');\n//@ ```\n//@\n//@ Filter adjacent matching lines from `input`.\nfunction _uniq(options, input, output) {\n  // Check if this is coming from a pipe\n  var pipe = common.readFromPipe();\n  if (!pipe) {\n    if (!input) common.error('no input given');\n    if (!fs.existsSync(input)) {\n      common.error(input + ': No such file or directory');\n    } else if (common.statFollowLinks(input).isDirectory()) {\n      common.error(\"error reading '\" + input + \"'\");\n    }\n  }\n  if (output && fs.existsSync(output) && common.statFollowLinks(output).isDirectory()) {\n    common.error(output + ': Is a directory');\n  }\n  var lines = (input ? fs.readFileSync(input, 'utf8') : pipe).trimRight().split('\\n');\n  var compare = function (a, b) {\n    return options.ignoreCase ? a.toLocaleLowerCase().localeCompare(b.toLocaleLowerCase()) : a.localeCompare(b);\n  };\n  var uniqed = lines.reduceRight(function (res, e) {\n    // Perform uniq -c on the input\n    if (res.length === 0) {\n      return [{\n        count: 1,\n        ln: e\n      }];\n    } else if (compare(res[0].ln, e) === 0) {\n      return [{\n        count: res[0].count + 1,\n        ln: e\n      }].concat(res.slice(1));\n    } else {\n      return [{\n        count: 1,\n        ln: e\n      }].concat(res);\n    }\n  }, []).filter(function (obj) {\n    // Do we want only duplicated objects?\n    return options.duplicates ? obj.count > 1 : true;\n  }).map(function (obj) {\n    // Are we tracking the counts of each line?\n    return (options.count ? lpad(7, obj.count) + ' ' : '') + obj.ln;\n  }).join('\\n') + '\\n';\n  if (output) {\n    new common.ShellString(uniqed).to(output);\n    // if uniq writes to output, nothing is passed to the next command in the pipeline (if any)\n    return '';\n  } else {\n    return uniqed;\n  }\n}\nmodule.exports = _uniq;","map":{"version":3,"names":["common","require","fs","lpad","c","str","res","length","Array","join","register","_uniq","canReceivePipe","cmdOptions","options","input","output","pipe","readFromPipe","error","existsSync","statFollowLinks","isDirectory","lines","readFileSync","trimRight","split","compare","a","b","ignoreCase","toLocaleLowerCase","localeCompare","uniqed","reduceRight","e","count","ln","concat","slice","filter","obj","duplicates","map","ShellString","to","module","exports"],"sources":["/home/lenovo/node_modules/shelljs/src/uniq.js"],"sourcesContent":["var common = require('./common');\nvar fs = require('fs');\n\n// add c spaces to the left of str\nfunction lpad(c, str) {\n  var res = '' + str;\n  if (res.length < c) {\n    res = Array((c - res.length) + 1).join(' ') + res;\n  }\n  return res;\n}\n\ncommon.register('uniq', _uniq, {\n  canReceivePipe: true,\n  cmdOptions: {\n    'i': 'ignoreCase',\n    'c': 'count',\n    'd': 'duplicates',\n  },\n});\n\n//@\n//@ ### uniq([options,] [input, [output]])\n//@\n//@ Available options:\n//@\n//@ + `-i`: Ignore case while comparing\n//@ + `-c`: Prefix lines by the number of occurrences\n//@ + `-d`: Only print duplicate lines, one for each group of identical lines\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ uniq('foo.txt');\n//@ uniq('-i', 'foo.txt');\n//@ uniq('-cd', 'foo.txt', 'bar.txt');\n//@ ```\n//@\n//@ Filter adjacent matching lines from `input`.\nfunction _uniq(options, input, output) {\n  // Check if this is coming from a pipe\n  var pipe = common.readFromPipe();\n\n  if (!pipe) {\n    if (!input) common.error('no input given');\n\n    if (!fs.existsSync(input)) {\n      common.error(input + ': No such file or directory');\n    } else if (common.statFollowLinks(input).isDirectory()) {\n      common.error(\"error reading '\" + input + \"'\");\n    }\n  }\n  if (output && fs.existsSync(output) && common.statFollowLinks(output).isDirectory()) {\n    common.error(output + ': Is a directory');\n  }\n\n  var lines = (input ? fs.readFileSync(input, 'utf8') : pipe).\n              trimRight().\n              split('\\n');\n\n  var compare = function (a, b) {\n    return options.ignoreCase ?\n           a.toLocaleLowerCase().localeCompare(b.toLocaleLowerCase()) :\n           a.localeCompare(b);\n  };\n  var uniqed = lines.reduceRight(function (res, e) {\n    // Perform uniq -c on the input\n    if (res.length === 0) {\n      return [{ count: 1, ln: e }];\n    } else if (compare(res[0].ln, e) === 0) {\n      return [{ count: res[0].count + 1, ln: e }].concat(res.slice(1));\n    } else {\n      return [{ count: 1, ln: e }].concat(res);\n    }\n  }, []).filter(function (obj) {\n                 // Do we want only duplicated objects?\n    return options.duplicates ? obj.count > 1 : true;\n  }).map(function (obj) {\n                 // Are we tracking the counts of each line?\n    return (options.count ? (lpad(7, obj.count) + ' ') : '') + obj.ln;\n  }).join('\\n') + '\\n';\n\n  if (output) {\n    (new common.ShellString(uniqed)).to(output);\n    // if uniq writes to output, nothing is passed to the next command in the pipeline (if any)\n    return '';\n  } else {\n    return uniqed;\n  }\n}\n\nmodule.exports = _uniq;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}