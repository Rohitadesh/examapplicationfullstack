{"ast":null,"code":"let url = \"http://localhost:5000/\";\nexport const api_post = async values => {\n  try {\n    let response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      },\n      body: JSON.stringify(values)\n    });\n    let result = await response.json();\n    console.log(result);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const api_get = async values => {\n  try {\n    let response = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json ; charset=UTF-8'\n      }\n    });\n    let result = await response.json();\n    console.log(result);\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["url","api_post","values","response","fetch","method","headers","body","JSON","stringify","result","json","console","log","error","api_get"],"sources":["/home/lenovo/Desktop/git/examapplicationfullstack/src/api.js"],"sourcesContent":["let url=\"http://localhost:5000/\"\nexport const api_post= async (values) =>{\n    try{\n        let response= await fetch(url,{\n            method:'POST',\n            headers:{\n                'Content-type': 'application/json; charset=UTF-8'\n            },\n            body:JSON.stringify(values)\n        })\n        let result= await response.json()\n        console.log(result)\n    }\n    catch(error){\n        console.log(error)\n    }   \n}    \n\nexport const api_get= async(values)=>{\n    try{\n        let response=await fetch(url,{\n            method:'GET',\n            headers:{\n                'content-type':'application/json ; charset=UTF-8'\n            }\n        })\n        let result=await response.json()\n        console.log(result)\n    }\n    catch(error){\n        console.log(error)\n    }\n \n}  \n "],"mappings":"AAAA,IAAIA,GAAG,GAAC,wBAAwB;AAChC,OAAO,MAAMC,QAAQ,GAAE,MAAOC,MAAM,IAAI;EACpC,IAAG;IACC,IAAIC,QAAQ,GAAE,MAAMC,KAAK,CAACJ,GAAG,EAAC;MAC1BK,MAAM,EAAC,MAAM;MACbC,OAAO,EAAC;QACJ,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAACC,IAAI,CAACC,SAAS,CAACP,MAAM;IAC9B,CAAC,CAAC;IACF,IAAIQ,MAAM,GAAE,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IACjCC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;EACvB,CAAC,CACD,OAAMI,KAAK,EAAC;IACRF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;EACtB;AACJ,CAAC;AAED,OAAO,MAAMC,OAAO,GAAE,MAAMb,MAAM,IAAG;EACjC,IAAG;IACC,IAAIC,QAAQ,GAAC,MAAMC,KAAK,CAACJ,GAAG,EAAC;MACzBK,MAAM,EAAC,KAAK;MACZC,OAAO,EAAC;QACJ,cAAc,EAAC;MACnB;IACJ,CAAC,CAAC;IACF,IAAII,MAAM,GAAC,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAChCC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;EACvB,CAAC,CACD,OAAMI,KAAK,EAAC;IACRF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;EACtB;AAEJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}